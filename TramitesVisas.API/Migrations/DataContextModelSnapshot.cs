// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TramitesVisas.API.Data;

#nullable disable

namespace TramitesVisas.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SolicitudesId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudesId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Gerente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Gerentes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudesId")
                        .HasColumnType("int");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudesId");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SolicitudesId")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudesId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Edad")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Renovacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaRenovacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudesId");

                    b.ToTable("Renovaciones");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaAgenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVisa")
                        .HasColumnType("int");

                    b.Property<int?>("PersonasId")
                        .HasColumnType("int");

                    b.Property<string>("TipoSolicitud")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TipoVisasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonasId");

                    b.HasIndex("TipoVisasId");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.TipoVisa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoVisas");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Documento", b =>
                {
                    b.HasOne("TramitesVisas.Shared.Entidades.Solicitud", "Solicitudes")
                        .WithMany("Documentos")
                        .HasForeignKey("SolicitudesId");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Historial", b =>
                {
                    b.HasOne("TramitesVisas.Shared.Entidades.Solicitud", "Solicitudes")
                        .WithMany("Historiales")
                        .HasForeignKey("SolicitudesId");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Pago", b =>
                {
                    b.HasOne("TramitesVisas.Shared.Entidades.Solicitud", "Solicitudes")
                        .WithMany("Pagos")
                        .HasForeignKey("SolicitudesId");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Renovacion", b =>
                {
                    b.HasOne("TramitesVisas.Shared.Entidades.Solicitud", "Solicitudes")
                        .WithMany("Renovaciones")
                        .HasForeignKey("SolicitudesId");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Solicitud", b =>
                {
                    b.HasOne("TramitesVisas.Shared.Entidades.Persona", "Personas")
                        .WithMany("Solicitudes")
                        .HasForeignKey("PersonasId");

                    b.HasOne("TramitesVisas.Shared.Entidades.TipoVisa", "TipoVisas")
                        .WithMany("Solicitudes")
                        .HasForeignKey("TipoVisasId");

                    b.Navigation("Personas");

                    b.Navigation("TipoVisas");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Persona", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.Solicitud", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Historiales");

                    b.Navigation("Pagos");

                    b.Navigation("Renovaciones");
                });

            modelBuilder.Entity("TramitesVisas.Shared.Entidades.TipoVisa", b =>
                {
                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
