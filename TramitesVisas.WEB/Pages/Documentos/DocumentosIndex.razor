@page "/documentos"
@using CurrieTechnologies.Razor.SweetAlert2
@using TramitesVisas.Shared.Entidades
@using TramitesVisas.WEB.Repositories
@using TramitesVisas.WEB.Shared
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager


<h3>DocumentosIndex</h3>
@inject IRepository repository 


<div class="card">
    <div class="card-header">
        <span>
            <i class="bi bi-person" /> Documentos
            <a class="btn btn-primary btn-sm float-end" href="/documentos/create"><i class="bi bi-plus-circle" />New Construccion</a>

        </span>
    </div>

    <div class="card-body">

        <GenericList MyList="Documentos">

            <Body>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Documentos!)
                        {
                            <tr>
                                <td>
                                    <a href="/construcciones/edit/@item.Id" class="btn btn-sm btn-warning"><i class="bi bi-pencil-square" /> Editar</a>
                                    <button onclick=@(() => DeleteAsycn(item)) class="btn btn-sm btn-danger"><i class="bi bi-trash-fill" /> Borrar</button>
                                </td>

                                <td>
                                    @item.Nombre
                                </td>
                                <td>
                                    @item.FechaSubida
                                </td>
                                <td>
                                    @item.URL
                                </td>



                            </tr>
                        }
                    </tbody>
                </table>
            </Body>
        </GenericList>
    </div>
</div>



@code {
    public List<Documento>? Documentos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        var responseHttp = await repository.GetAsync<List<Documento>>("api/documentos");
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        Documentos = responseHttp.Response;
    }
    private async Task DeleteAsycn(Documento documento)
    {
        Console.WriteLine("Esotrrr"); 
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = $"¿Estas seguro de querer borrar el documento: {documento.Nombre}?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
            });
        var confirm = string.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }

        var responseHttp = await repository.DeleteAsync<Documento>($"api/Documentos/Borrar?id={documento.Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("construcciones");
            }
            else
            {
                var mensajeError = await responseHttp.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
            return;
        }

        await LoadAsync();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro borrado con éxito.");
    }





}