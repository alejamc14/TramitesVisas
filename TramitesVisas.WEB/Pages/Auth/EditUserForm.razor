@using CurrieTechnologies.Razor.SweetAlert2
﻿@using TramitesVisas.Shared.Entidades
@using TramitesVisas.WEB.Repositories
@inject IRepository Repository
@inject SweetAlertService swal

<EditForm Model="user" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <span>
                <i class="oi oi-key" /> Cambiar Contraseña
                <a class="btn btn-sm btn-success float-end" href="/"><i class="oi oi-arrow-thick-left" /> Regresar</a>
                <button class="btn btn-sm btn-primary float-end mx-2" type="submit"><i class="oi oi-check" /> Guardar Cambios</button>
            </span>

        </div>
        <div class="card-body">
            
            <div class="row">
                <div class="col-6">
                    <div class="mb-3">
                        <label>Nombres:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="user.FirstName" />
                            <ValidationMessage For="@(() => user.FirstName)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Apellidos:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="user.LastName" />
                            <ValidationMessage For="@(() => user.LastName)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Documento:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="user.Document" />
                            <ValidationMessage For="@(() => user.Document)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Teléfono:</label>
                        <div>
                            <InputNumber class="form-control" @bind-Value="user.Telefono" />
                            <ValidationMessage For="@(() => user.Telefono)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Nacionalidad:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="user.Nacionalidad" />
                            <ValidationMessage For="@(() => user.Nacionalidad)" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label>Dirección:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="user.Address" />
                            <ValidationMessage For="@(() => user.Address)" />
                        </div>
                    </div>
                    @* <div class="mb-3">
                        <InputImg Label="Foto" ImageSelected="ImageSelected" ImageURL="@imageUrl" />
                    </div> *@
                </div>


            </div>

        </div>
    </div>

</EditForm>


@code {
    private string? imageUrl;

    [EditorRequired]
    [Parameter]
    public UserDTO user { get; set; }


    [EditorRequired]
    [Parameter]
    public EventCallback OnSubmit { get; set; }
 

    private void ImageSelected(string imagenBase64)
    {
        user!.Photo = imagenBase64;
        imageUrl = null;
    }






}
